#
# Copyright (c) 2020 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.

acceleratedCompositedAnimationsEnabled:
  initial: true
  onChange: setNeedsRecalcStyleInAllFrames

acceleratedCompositingForFixedPositionEnabled:
  initial: defaultAcceleratedCompositingForFixedPositionEnabled

acceleratedFiltersEnabled:
  initial: false

allowContentSecurityPolicySourceStarToMatchAnyProtocol:
  initial: false

allowDisplayOfInsecureContent:
  initial: false

allowRunningOfInsecureContent:
  initial: false

animatedImageDebugCanvasDrawingEnabled:
  initial: false

appleMailPaginationQuirkEnabled:
  initial: false

audioPlaybackRequiresUserGesture:
  initial: defaultAudioPlaybackRequiresUserGesture

autoscrollForDragAndDropEnabled:
  initial: false

backForwardCacheExpirationInterval:
  type: Seconds
  initial: 30_min

backgroundShouldExtendBeyondPage:
  initial: false
  onChange: backgroundShouldExtendBeyondPageChanged

clientCoordinatesRelativeToLayoutViewport:
  initial: false
  onChange: setNeedsRecalcStyleInAllFrames

clipboardAccessPolicy:
  type: ClipboardAccessPolicy
  initial: ClipboardAccessPolicy::RequiresUserGesture

# Some ports (e.g. iOS) might choose to display attachments inline, regardless of whether the response includes the
# HTTP header "Content-Disposition: attachment". This setting enables a sandbox around these attachments. The sandbox
# enforces all frame sandbox flags (see enum SandboxFlag in SecurityContext.h), and also disables <meta http-equiv>
# processing and subframe loading.
contentDispositionAttachmentSandboxEnabled:
  initial: false

crossOriginCheckInGetMatchedCSSRulesDisabled:
  initial: false

dataDetectorTypes:
  type: DataDetectorTypes
  initial:
  conditional: ENABLE(DATA_DETECTION)

# Some apps could have a default video poster if it is not set.
defaultVideoPosterURL:
  type: String

disableScreenSizeOverride:
  initial: false

# FIXME: This should really be disabled by default as it makes platforms that don't support the feature download files
# they can't use by. Leaving enabled for now to not change existing behavior.
downloadableBinaryFontsEnabled:
  initial: defaultDownloadableBinaryFontsEnabled()

editableLinkBehavior:
  type: EditableLinkBehavior
  initial: EditableLinkDefaultBehavior

editingBehaviorType:
  type: EditingBehaviorType
  initial: editingBehaviorTypeForPlatform()

enforceCSSMIMETypeInNoQuirksMode:
  initial: true

experimentalNotificationsEnabled:
  initial: false

fixedBackgroundsPaintRelativeToDocument:
  initial: defaultFixedBackgroundsPaintRelativeToDocument

fixedElementsLayoutRelativeToFrame:
  initial: false

fontFallbackPrefersPictographs:
  initial: false
  onChange: setNeedsRecalcStyleInAllFrames

fontLoadTimingOverride:
  type: FontLoadTimingOverride
  initial: FontLoadTimingOverride::None

fontRenderingMode:
  type: FontRenderingMode
  initial: FontRenderingMode::Normal

forceCompositingMode:
  initial: false

forcePendingWebGLPolicy:
  initial: false
  getter: isForcePendingWebGLPolicy

forceWebGLUsesLowPower:
  initial: false

forcedColorsAreInvertedAccessibilityValue:
  type: ForcedAccessibilityValue
  initial: defaultForcedColorsAreInvertedAccessibilityValue

forcedDisplayIsMonochromeAccessibilityValue:
  type: ForcedAccessibilityValue
  initial: defaultForcedDisplayIsMonochromeAccessibilityValue

forcedPrefersReducedMotionAccessibilityValue:
  type: ForcedAccessibilityValue
  initial: defaultForcedPrefersReducedMotionAccessibilityValue

forcedSupportsHighDynamicRangeValue:
  type: ForcedAccessibilityValue
  initial: defaultForcedSupportsHighDynamicRangeValue
  onChange: setNeedsRecalcStyleInAllFrames

frameFlattening:
  type: FrameFlattening
  initial: FrameFlattening::Disabled
  onChange: setNeedsRelayoutAllFrames

geolocationFloorLevelEnabled:
  initial: true

idempotentModeAutosizingOnlyHonorsPercentages:
  initial: false
  conditional: ENABLE(TEXT_AUTOSIZING)

imageSubsamplingEnabled:
  initial: defaultImageSubsamplingEnabled

imagesEnabled:
  initial: true
  getter: areImagesEnabled
  onChange: imagesEnabledChanged
  inspectorOverride: true

isAccessibilityIsolatedTreeEnabled:
  initial: false

isPerActivityStateCPUUsageMeasurementEnabled:
  initial: defaultPerActivityStateCPUUsageMeasurementEnabled

isPostBackgroundingCPUUsageMeasurementEnabled:
  initial: defaultPostBackgroundingCPUUsageMeasurementEnabled

isPostBackgroundingMemoryUsageMeasurementEnabled:
  initial: defaultPostBackgroundingMemoryUsageMeasurementEnabled

isPostLoadCPUUsageMeasurementEnabled:
  initial: defaultPostLoadCPUUsageMeasurementEnabled

isPostLoadMemoryUsageMeasurementEnabled:
  initial: defaultPostLoadMemoryUsageMeasurementEnabled

javaScriptRuntimeFlags:
  type: JSC::RuntimeFlags

langAttributeAwareFormControlUIEnabled:
  initial: false

# FIMXE: This does not appear to ever be set to true. Remove once verified.
legacyBeforeLoadEventEnabled:
  initial: false

loadDeferringEnabled:
  initial: true

localStorageDatabasePath:
  type: String

maximumAccelerated2dCanvasSize:
  type: uint32_t
  initial: 5120*2880

maximumHTMLParserDOMTreeDepth:
  type: uint32_t
  initial: defaultMaximumHTMLParserDOMTreeDepth

maximumPlugInSnapshotAttempts:
  type: uint32_t
  initial: 20

# Allow SourceBuffers to store up to 304MB each, enough for approximately five minutes
# of 1080p video and stereo audio.
maximumSourceBufferSize:
  type: uint32_t
  initial: 318767104
  conditional: ENABLE(MEDIA_SOURCE)

mediaDeviceIdentifierStorageDirectory:
  type: String
  conditional: ENABLE(MEDIA_STREAM)

mediaKeysStorageDirectory:
  type: String

mediaTypeOverride:
  type: String
  initial: '"screen"'
  onChange: mediaTypeOverrideChanged

# Number of pixels below which 2D canvas is rendered in software
# even if hardware acceleration is enabled.
# Hardware acceleration is useful for large canvases where it can avoid the
# pixel bandwidth between the CPU and GPU. But GPU acceleration comes at
# a price - extra back-buffer and texture copy. Small canvases are also
# widely used for stylized fonts. Anti-aliasing text in hardware at that
# scale is generally slower. So below a certain size it is better to
# draw canvas in software.
minimumAccelerated2dCanvasSize:
  type: uint32_t
  initial: 257*256

# FIXME: This quirk is needed because of Radar 4674537 and 5211271. We need to phase it out once Adobe
# can fix the bug from their end.
needsAdobeFrameReloadingQuirk:
  initial: false
  getter: needsAcrobatFrameReloadingQuirk

# This is an iOS-specific quirk. Unlike Mac, keyboard operations are asynchronous and hence a DOM update as
# a result of text insertion or deletion does not occur within the same event loop iteration as a dispatched
# DOM keydown event. Some sites, notably Google Sheets, schedule timers on keypress and expect on a DOM update
# to have occurred on expiration. When enabled, this quirk puts all such scheduled timers in a holding tank
# until the keyboard performs the insertion or deletion. This gives Google Sheets the illusion that the DOM
# update happened within the same event loop iteration that the keypress event was dispatched in.
needsDeferKeyDownAndKeyPressTimersUntilNextEditingCommandQuirk:
  initial: false

needsFrameNameFallbackToIdQuirk:
  initial: false

# Some apps needs isLoadingInAPISense to account for active subresource loaders.
needsIsLoadingInAPISenseQuirk:
  initial: false

# This is a quirk we are pro-actively applying to old applications. It changes keyboard event dispatching,
# making keyIdentifier available on keypress events, making charCode available on keydown/keyup events,
# and getting keypress dispatched in more cases.
needsKeyboardEventDisambiguationQuirks:
  initial: false

parserScriptingFlagPolicy:
  type: ParserScriptingFlagPolicy
  initial: ParserScriptingFlagPolicy::OnlyIfScriptIsEnabled

paymentRequestEnabled:
  conditional: ENABLE(PAYMENT_REQUEST)
  initial: false

pdfImageCachingPolicy:
  type: PDFImageCachingPolicy
  initial: PDFImageCachingDefault

preferMIMETypeForImages:
  initial: false

preventKeyboardDOMEventDispatch:
  initial: false

quickTimePluginReplacementEnabled:
  initial: defaultQuickTimePluginReplacementEnabled

repaintOutsideLayoutEnabled:
  initial: false

rubberBandingForSubScrollableRegionsEnabled:
  initial: true
  conditional: ENABLE(RUBBER_BANDING)

scrollingCoordinatorEnabled:
  initial: false

scrollingPerformanceLoggingEnabled:
  initial: false
  onChange: scrollingPerformanceLoggingEnabledChanged

scrollingTreeIncludesFrames:
  initial: defaultScrollingTreeIncludesFrames

# Allow clients concerned with memory consumption to set a quota on session storage
# since the memory used won't be released until the Page is destroyed.
sessionStorageQuota:
  type: uint32_t
  initial: StorageMap::noQuota

shouldConvertInvalidURLsToBlank:
  initial: true

shouldDispatchSyntheticMouseEventsWhenModifyingSelection:
  initial: false

shouldDispatchSyntheticMouseOutAfterSyntheticClick:
  initial: false

shouldIgnoreFontLoadCompletions:
  initial: false

shouldInjectUserScriptsInInitialEmptyDocument:
  initial: false

shrinksStandaloneImagesToFit:
  initial: true

storageAccessAPIPerPageScopeEnabled:
  initial: true

storageBlockingPolicy:
  type: SecurityOrigin::StorageBlockingPolicy
  initial: SecurityOrigin::AllowAllStorage
  onChange: storageBlockingPolicyChanged

systemLayoutDirection:
  type: TextDirection
  initial: TextDirection::LTR

textAutosizingWindowSizeOverride:
  type: IntSize
  onChange: setNeedsRecalcStyleInAllFrames
  conditional: ENABLE(TEXT_AUTOSIZING)

textDirectionSubmenuInclusionBehavior:
  type: TextDirectionSubmenuInclusionBehavior
  initial: TextDirectionSubmenuAutomaticallyIncluded

timeWithoutMouseMovementBeforeHidingControls:
  type: Seconds
  initial: 3_s

touchEventEmulationEnabled:
  initial: false
  getter: isTouchEventEmulationEnabled
  conditional: ENABLE(TOUCH_EVENTS)

treatIPAddressAsDomain:
  initial: false

treatsAnyTextCSSLinkAsStylesheet:
  initial: false

unhandledPromiseRejectionToConsoleEnabled:
  initial: true

unifiedTextCheckerEnabled:
  initial: defaultUnifiedTextCheckerEnabled

useAnonymousModeWhenFetchingMaskImages:
  initial: true

useImageDocumentForSubframePDF:
  initial: false

useLegacyBackgroundSizeShorthandBehavior:
  initial: false

usePreHTML5ParserQuirks:
  initial: false

userInterfaceDirectionPolicy:
  type: UserInterfaceDirectionPolicy
  initial: UserInterfaceDirectionPolicy::Content

userStyleSheetLocation:
  type: URL
  onChange: userStyleSheetLocationChanged

# Sets the magnification value for validation message timer.  If the
# magnification value is N, a validation message disappears automatically after
# <message length> * N / 1000 seconds.  If N is equal to or less than 0, a
# validation message doesn't disappears automaticaly.
validationMessageTimerMagnification:
  type: uint32_t
  initial: 50

videoPlaybackRequiresUserGesture:
  initial: defaultVideoPlaybackRequiresUserGesture

visualViewportEnabled:
  initial: true
  onChange: setNeedsRecalcStyleInAllFrames

webGLErrorsToConsoleEnabled:
  initial: true

webRTCEncryptionEnabled:
  initial: true
  inspectorOverride: true

webkitImageReadyEventEnabled:
  initial: false

# When enabled, window.blur() does not change focus, and
# window.focus() only changes focus when invoked from the context that
# created the window.
windowFocusRestricted:
  initial: true

youTubeFlashPluginReplacementEnabled:
  initial: defaultYouTubeFlashPluginReplacementEnabled
