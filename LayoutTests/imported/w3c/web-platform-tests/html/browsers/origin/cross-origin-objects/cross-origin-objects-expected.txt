
Harness Error (TIMEOUT), message = null

PASS Basic sanity-checking 
PASS Only whitelisted properties are accessible cross-origin 
PASS [[GetPrototypeOf]] should return null 
PASS [[SetPrototypeOf]] should return false 
PASS [[IsExtensible]] should return true for cross-origin objects 
PASS [[PreventExtensions]] should throw for cross-origin objects 
PASS [[GetOwnProperty]] - Properties on cross-origin objects should be reported |own| 
PASS [[GetOwnProperty]] - Property descriptors for cross-origin properties should be set up correctly 
PASS [[GetOwnProperty]] - Subframe named 'then' should shadow the default 'then' value 
PASS [[Delete]] Should throw on cross-origin objects 
PASS [[DefineOwnProperty]] Should throw for cross-origin objects 
PASS Can only enumerate safelisted enumerable properties 
PASS [[OwnPropertyKeys]] should return all properties from cross-origin objects 
PASS [[OwnPropertyKeys]] should return the right symbol-named properties for cross-origin objects 
PASS [[OwnPropertyKeys]] should place the symbols after the property names after the subframe indices 
PASS [[OwnPropertyKeys]] should not reorder where 'then' appears if it's a named subframe, nor add another copy of 'then' 
PASS A and B jointly observe the same identity for cross-origin Window and Location 
PASS Cross-origin functions get local Function.prototype 
PASS Cross-origin Window accessors get local Function.prototype 
PASS Same-origin observers get different functions for cross-origin objects 
PASS Same-origin observers get different accessors for cross-origin Window 
PASS Same-origin observers get different accessors for cross-origin Location 
PASS {}.toString.call() does the right thing on cross-origin objects 
FAIL Resolving a promise with a cross-origin window without a 'then' subframe should work. Blocked a frame with origin "http://localhost:8800" from accessing a cross-origin frame. Protocols, domains, and ports must match.
  
